@model CrudEventViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>EventEditModel</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="EditEvent">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(x => x.Id)
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Description" class="control-label"></label>
                <input asp-for="Description" class="form-control" />
                <span asp-validation-for="Description" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="LocationType" class="control-label"></label>
                @Html.DropDownList("LocationType", (SelectList)ViewBag.RequiredLocationType, new { @class = "form-control" })
                <span asp-validation-for="LocationType" class="text-danger"></span>
            </div>

            <div class="form-group">
                <label asp-for="StartsAt" class="control-label"></label>
                <input asp-for="StartsAt" class="form-control" />
                <span asp-validation-for="StartsAt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="EndsAt" class="control-label"></label>
                <input asp-for="EndsAt" class="form-control" />
                <span asp-validation-for="EndsAt" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Type" class="control-label"></label>
                @Html.DropDownList("Type", (SelectList)ViewBag.RequiredEventType, new { @class = "form-control" })
                <span asp-validation-for="Type" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Audience" class="control-label"></label>
                @Html.DropDownList("Audience", (SelectList)ViewBag.RequiredAudience, new { @class = "form-control" })
                <span asp-validation-for="Audience" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="PublishDate" class="control-label"></label>
                <input asp-for="PublishDate" class="form-control" />
                <span asp-validation-for="PublishDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsActive" /> @Html.DisplayNameFor(model => model.IsActive)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="Pictures" class="control-label"></label>

                @foreach (var item in Model.Pictures)
                {
                    int i = 0;
                    <input asp-for="Pictures[i]" class="form-control" />
                    i++;
                }
                <input asp-for="Pictures" class="form-control" />
                <span asp-validation-for="Pictures" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Edit" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    @Html.ActionLink("Back to list", "Index", "Home")
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
